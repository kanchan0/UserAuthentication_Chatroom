<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <title>MongoChat</title>
    <style>
        #messages{height: 300px;}
        body{
            background-color:rgb(248, 153, 115);
        }
        #message-box{
            margin-top: 127px;
            border-top: 2px solid #f39c12;
            border-top-color: 1px solid red;
            background: white;
            box-shadow: 0 1px 1px rgba(0,0,0,0.1);
        }
        .top-header{
            background: white;
            box-shadow: 0 2px 14px 0 rgba(0, 0, 0, 0.08);
            /* padding: 0; */
            margin: 0;
            padding:10px;
        }
</style>   
</head>
<body >
        <div class="row col-12 top-header">
            <div class="col-6 ">
                   
                    <h1>
                            Chat-Room
                        </h1>
            </div>

            <div class="col-6" style="text-align:end">
                    <button id="clear" class="btn btn-danger">Clear</button>
                    <a  href="/users/logout" class="btn btn-warning">LogOut</a>
                    
            </div>
        </div>
    <div class="container">
      
        <div class="row">
                <div class="col-sm-8 " style="margin-top:81px;">
                      
                
                        <p class="lead mb-3"> Welcome <%= name %></p>
                        <div id="status"></div>
                        <div id="read"></div>
        
                        <div id="chat">
                            
                            <div class="card">
                                <div id="messages" class = "card-block" style="overflow:scroll; background:white; height:370px; border-top: 2px solid #f39c12;" >
                            
                                </div>
                            </div>
                            <br>
                            <textarea id="textarea" class="form-control" style="border-top: 2px solid #f39c12"
                            placeholder="enter message .."></textarea>
                        </div>
                </div>
            <div class="col-sm-3" id="message-box">
                    <div class="box-header with-border">
                            <h4 class="box-title">Online Members</h4>
                          </div>
                
            </div>
           
    </div>
    <script id="user-data" type="application/json">
    <%= name %>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js"></script>
<script>
        var user_name =document.getElementById('user-data').textContent;
       
        (function(){
            
            var element = function(id){
                return document.getElementById(id)
            }

            //get elemnt
            var status = element('status')
            var messages = element('messages')
            var textarea = element('textarea')
            var clearBtn = element('clear')

            //set default status
            var statusDefault = status.textContent;
            var setStatus = function(s){
                //set status
                status.textContent=s;
                if(s!==statusDefault){
                    var delay = setTimeout(function(){
                        setStatus(statusDefault)
                    },2000)
                }
            }

            //connect to socket.io
            var socket = io.connect("http://127.0.0.1:4000/");
            //check for connection
            if(socket !== undefined){
                console.log("connected to socket ...")
                socket.emit("online_users",user_name);
            //handle output    
            socket.on('output',function(data){
               
                // console.log(data);
                if(data.length){
                    for(var x=0;x<data.length;x++){
                        //build out messages div
                        var message = document.createElement('div');
                       // message.setAttribute('class','bubble');
                        if(data[x].name===user_name){

                            message.style.width='270px';
                            message.style.margin='5px auto';
                            message.style.background='#556B2F';
                            message.style.padding='4px';
                            message.style.textAlign='center';
                            message.style.fontWeight="400";
                            message.style.color="#fff";
                            message.style.fontFamily='arial';
                            message.style.position='relative';
                            message.style.border='1px solid #00bfb6';
                            message.style.left="25%";

                            message.textContent=data[x].message
                        }else{
                            message.style.background='#556B2F';
                            message.style.width='270px';
                            message.style.margin='5px auto';
                            message.style.border='1px solid #00bfb6';
                            message.style.padding='4px';
                            message.style.textAlign='center';
                            message.style.fontWeight='400';
                            message.style.color='#fff';
                            message.style.fontFamily='arial';
                            message.style.position='relative';
                            message.style.right="25%";

                            message.textContent=data[x].name+":"+" "+data[x].message
                        }
                        messages.appendChild(message);
                        //messages.insertBefore(message,messages.firstChild)
                    }
                }
            })

            //get status from the server
            socket.on('status',function(data){
                //get messae status
                setStatus((typeof data === 'object')?data.message:data)
                
                //if status is clear,clear the text
                if(data.clear){
                    textarea.value=""; 
                }
            })

            //handle Input
            textarea.addEventListener("keydown",function(event){
               //13 is for enter key
                if(event.which===13 && event.shiftKey==false){
                    //emit to the server input
                    socket.emit('input',{
                        name:user_name,
                        message:textarea.value
                    })
                    event.preventDefault();
                }else{
                    socket.emit("typing",{user_name})
                }
            })

            //handle clear button
            clearBtn.addEventListener("click",function(){
                socket.emit("clear");
            })

            //clear message
            socket.on("cleared",function(){
                messages.textContent = "";
            })
            socket.on("Disconnected_user",function(data){
                console.log(">>>>>>>>>>>>",data)
               // data.foreach(element=>{
                    let element1=document.getElementById(data);
                    console.log("element1",element1);
                    if(element!==undefined){
                    element1.parentNode.removeChild(element1)}
             //   })
        })
            socket.on("users_online",function(data){
                console.log("online users",data);
                let parent=document.getElementById('message-box')
                data.map(data=>{
                    let messageItem=document.createElement('div');
                    messageItem.id=data;
                    let node=document.createTextNode(data);
                    messageItem.appendChild(node);
                    parent.appendChild(messageItem)
                })
            })
        }
     })();
</script>
</body>
</html>


